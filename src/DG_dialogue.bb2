; =============================================================================
; DG_dialogue
; -----------------------------------------------------------------------------
; Dialogue related statements and functions
; Prefix DG = DialoGue
;

; Displays and runs the dialog at the given id
; =============================================================================
#DG_x_pos = 112
#DG_width = 32
#DG_x_padding = #DG_x_pos + #TX_frame_size
#DG_y_padding = 8

Function .b dg_is_page_enabled{pid.w, page_ptr.l}
  SHARED NS_flags(), NS_page_flags()
  DEFTYPE .DG_page *cur_page
  DEFTYPE .b enabled
  *cur_page = page_ptr

  enabled = NS_page_flags(pid)
  If *cur_page\check_flag <> -1
    enabled = enabled AND NS_flags(*cur_page\check_flag)
  End If

  Function Return enabled
End Function

Function .b dg_is_choice_enabled{cid.w, choice_ptr.l}
  SHARED NS_flags(), NS_choice_flags()
  DEFTYPE .DG_choice *choice
  DEFTYPE .b enabled
  *choice = choice_ptr

  enabled = NS_choice_flags(cid)
  If *choice\check_flag <> -1
    enabled = enabled AND NS_flags(*choice\check_flag)
  End If

  Function Return enabled
End Function

Statement dg_update_page{pid.w, page_ptr.l}
  SHARED NS_flags(), NS_page_flags()
  DEFTYPE .DG_page *cur_page
  DEFTYPE .b enabled
  *cur_page = page_ptr

  If *cur_page\self_disable = True Then NS_page_flags(pid) = False
  If *cur_page\set_flag <> -1 Then NS_flags(*cur_page\set_flag) = True
  If *cur_page\clear_flag <> -1 Then NS_flags(*cur_page\clear_flag) = False
End Statement

Statement DG_show_dialog{id.w}
  !DB_trace{"DG", "DG_show_dialog:" + Str$(id)}
  SHARED DG_dialogue_is_active, NS_script_queue
  SHARED NS_flags(), NS_page_flags(), NS_choice_flags()
  !__use_dialogues{}
  !__use_string_table{}

  DEFTYPE .DG_dialogue *current
  DEFTYPE .DG_page *cur_page
  DEFTYPE .b displayed, lmb
  DEFTYPE .w pointer_id, page_id, current_speaker

; We won't have more than 8 choices, right?
  Dim rects.NN_screen_rect(8)

  *current = !__get_dialogue{id}
  page_id = *current\first_page_id

  displayed = False
  pointer_id = 0
  current_speaker = -1

  BLITZ
  DG_dialogue_is_active = True
  While DG_dialogue_is_active
    VWait
    DisplaySprite #CP_coplist, pointer_id, MouseX, MouseY, 0
    lmb = IN_update_mouse{}

    ; If the page is not enabled, advance until we find one that is.
    Repeat
      *cur_page = !__get_page{page_id}
      If dg_is_page_enabled{page_id, *cur_page} = False
        page_id + 1
        displayed = False
      End If
    Until page_id <> -1

    If page_id <> -1
      *cur_page = !__get_page{page_id}

      ; Check to see if this page is a page of dialog or a page of exposition
      ; Expository pages have no speaker and no choices.
      If *cur_page\speaker_id = -1 AND *cur_page\first_choice_id = -1
        UnBuffer 0
        UnBuffer #BF_faces
        current_speaker = -1
        TX_draw_text_wrapped{!__get_string{*cur_page\text_id}, 32, #NN_half_screen_width , #NN_screen_height, True}
        dg_update_page{page_id, *cur_page}
        page_id = *cur_page\page_id
      Else
        ; Display the dialog page
        If displayed = False
          ; New page. Display the speaker if there is one or it's different than
          ; the one currently shown
          If *cur_page\speaker_id > -1 AND current_speaker <> *cur_page\speaker_id
            UnBuffer #BF_faces
            current_speaker = *cur_page\speaker_id
            SH_draw_portrait{current_speaker, 4, 4}
          End If

          ; Clear the text and begin writing the new page
          UnBuffer 0
          DEFTYPE .TX_context ctx
          TX_begin{&ctx, True}

          DEFTYPE .l size
          BlitMode InvMode
          size = TX_put_text{&ctx, *cur_page\text_id, #DG_width}
          BlitMode CookieMode

          If *cur_page\first_choice_id <> -1
            DEFTYPE .DG_choice *choice
            DEFTYPE .w cwidth, cheight, choice_id

            For c = 0 To *cur_page\choice_count - 1
              choice_id = *cur_page\first_choice_id + c
              *choice = !__get_choice{choice_id}

              If dg_is_choice_enabled{choice_id, *choice}
                ctx\y_position + 1
                rects(c)\x0 = #DG_x_padding
                rects(c)\y0 = (ctx\y_position + 1) * #TX_font_height + #DG_y_padding

                size = TX_put_text{&ctx, *choice\text_id, #DG_width}

                cwidth = !__get_size_width{size}
                cheight = !__get_size_height{size}
                rects(c)\x1 = rects(c)\x0 + (cwidth * #TX_font_width)
                rects(c)\y1 = rects(c)\y0 + (cheight * #TX_font_height)
              Else
                rects(c)\x1 = -1
                rects(c)\y1 = -1
              End If
            Next
          End If

          TX_end{&ctx, #DG_x_pos, #DG_y_padding, False}
          displayed = True
        End If

        ; Handle user interaction
        If *cur_page\choice_count > 0
          DEFTYPE .w selected, choice_id
          DEFTYPE .DG_choice *choice
          selected = IN_check_mouse{&rects(0), *cur_page\choice_count}

          If selected <> -1
            choice_id = *cur_page\first_choice_id + selected
            *choice = !__get_choice{choice_id}
            pointer_id = #NN_pointer_interact

            If lmb = #IN_mouse_released
              NS_script_queue = *choice\script_offset
              displayed = False

              If *choice\self_disable = True Then NS_choice_flags(choice_id) = False
              If *choice\set_flag <> -1 Then NS_flags(*choice\set_flag) = True
              If *choice\clear_flag <> -1 Then NS_flags(*choice\clear_flag) = False

              dg_update_page{page_id, *cur_page}
              page_id = *choice\page_id
            End If
          Else
            pointer_id = #NN_pointer_default
          End If
        Else
          If lmb = #IN_mouse_released
            displayed = False
            dg_update_page{page_id, *cur_page}
            page_id = *cur_page\page_id
          End If
        End If
      End If
    End If

    If page_id = -1 Then DG_dialogue_is_active = False
  Wend

  UnBuffer 0
  UnBuffer #BF_faces
End Statement

; Enables/Disables a page
; =============================================================================
Statement DG_enable_page{id.w, enabled.b}
  !DB_trace{"DG", "DG_enable_page:" + Str$(id) + ", " + Str$(enabled)}
End Statement

; Enables/Disables a choice
; =============================================================================
Statement DG_enable_choice{id.w, enabled.w}
  !DB_trace{"DG", "DG_enable_choice:" + Str$(id) + ", " + Str$(enabled)}
End Statement

; Changes the speaker's portrait
; =============================================================================
Statement DG_set_speaker_image{image_id.w}
  !DB_trace{"DG", "DG_set_speaker_image:" + Str$(image_id)}
End Statement

; Changes the speaker's name
; =============================================================================
Statement DG_set_speaker_name{name_id.w}
  !DB_trace{"DG", "DG_set_speaker_name:" + Str$(name_id)}
End Statement

; Ends the current dialogue
; =============================================================================
Statement DG_end{}
  !DB_trace{"DG", "DG_end"}
  SHARED DG_dialogue_is_active

  DG_dialogue_is_active = False
End Statement