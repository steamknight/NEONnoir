; =============================================================================
; NN_main
; -----------------------------------------------------------------------------
; Where the magic happens.
; =============================================================================

AMIGA
DEFTYPE .b NN_is_NTSC
NN_is_NTSC = NTSC

If GetIconObject("neonnoir") > 0
  NN_is_NTSC = NTSC Or FindToolType("FORCE_NTSC")
End If

!DB_printf{"******************* Is NTSC? %d - Forcing to NTSC? %d", NTSC, NN_is_NTSC}

If NN_is_NTSC Then Poke $DFF1DC, $000

; MTInstall = True if PAL or MTInit = False if NTSC
MTInstall NOT NN_is_NTSC
; PAL has 256 vertical lines, but NTSC only has 200. Center the display
; so that it doesn't look terrible for PAL.
DEFTYPE .w screen_offset
If NN_is_NTSC
  screen_offset = #CP_origin
Else
  screen_offset = #CP_origin_PAL
End If
!DB_log_val{"MAIN", "screen_offset %d", screen_offset}
InitCopList #CP_coplist, screen_offset, #NN_screen_height, #CP_flags, #CP_sprites, #NN_screen_colors, 0

; Set up a buffer for blitting into the main screen
Buffer #BF_main_screen, 64000
Buffer #BF_shapes, 64000
Buffer #BF_faces, 16000

;Load the title song
DEFTYPE .b success
LoadBank 0, "data/music/theme.mod", 2
MTInit 0,0
MTPlay On

NN_should_quit = False

NS_script_queue = -1
MS_current_track_id = -1

success = NN_startup{"data/gutter.neon"}
If success <> #NN_NEON_success
  If success = #NN_NEON_quit
    NPrint "Bye bye!"
  Else
    NPrint "Failed to start game."
  End If
  Goto Finish
End If


; Run the game
DEFTYPE .w overlapped, prev_overlap, menu_x, menu_y
DEFTYPE .NN_region *region
DEFTYPE .b left_mouse, prev_bmp
DEFTYPE .s scene_description
DEFTYPE .l size

DEFTYPE .TX_context text_region_ctx
DEFTYPE .NN_text_region *text_region

NN_pointer_id = 0
overlapped = -1
prev_overlap = -1

BLITZ
Mouse On

menu_x = 320 - ShapeWidth(#SH_menu) - 4
menu_y = 200 - ShapeHeight(#SH_menu) - 4

NN_fade_in = False
NN_fade_out = False

prev_bmp = -1

; Setup 'B' as the breakpoint key
; SetInt 5
;   !DB_init_breakpoint{$35}
; End SetInt

Repeat
  VWait

  left_mouse = IN_update_mouse{}

  ;NN_current_bmp = *NN_current_scene\background_id

  ; If we changed locations, let's kill any text that might be hanging around
  If NN_scene_changed
    NN_scene_changed = False
    UnBuffer 0

    If *NN_current_scene\first_text_region <> -1
      For tr = *NN_current_scene\first_text_region to *NN_current_scene\last_text_region
        *text_region = !__get_text_region{tr}
        TX_begin{&text_region_ctx, False, *text_region\center_vertical}
        text_region_ctx\justify = *text_region\justify
        size = TX_put_text{&text_region_ctx, *text_region\text_id, *text_region\width}
        TX_end{&text_region_ctx, *text_region\x, *text_region\y, False}
      Next
    End If
  End If

  ; Show the background image
  DisplayPalette #CP_coplist, NN_current_bmp
  DisplayBitMap #CP_coplist, NN_current_bmp

  ; Update the mouse pointer
  DisplaySprite #CP_coplist, NN_pointer_id, MouseX, MouseY, 0

  ; Check if we should display the scene's first time description
  If NOT NS_scene_flags(NN_current_global_scene_id)
    If *NN_current_scene\first_desc_id <> -1
      For d = *NN_current_scene\first_desc_id to *NN_current_scene\last_desc_id
        scene_description = !__get_string{d}
        TX_draw_text_wrapped{scene_description, 32, #NN_half_screen_width , #NN_screen_height, True}
      Next
    End If
    NS_scene_flags(NN_current_global_scene_id) = True
  End If

  ; Check if menu icon is clicked
  If MouseX > menu_x AND MouseY > menu_y AND NOT *NN_current_scene\is_cutscene
    DisplaySprite #CP_coplist, #NN_pointer_interact, MouseX, MouseY, 0
    If left_mouse = #IN_mouse_released
      DG_show_dialog{0}
    End If
  Else
    ; Check if any regions that have been hovered over
    overlapped = NN_get_overlapped_region{MouseX, MouseY}

    If NN_fade_in Then FadeInScreen{#CP_coplist, NN_current_bmp, #PAL_fx}
    If NN_fade_out Then FadeOutScreen{#CP_coplist, NN_current_bmp, #PAL_fx}

    NS_process_queue{}

    If overlapped <> -1
      *region = !__get_region{overlapped}
      NN_pointer_id = *region\pointer_id

      If left_mouse = #IN_mouse_released
        If *region\script_offset <> -1
          UnBuffer #BF_main_screen
          NS_execute_script{*region\script_offset}
        End If

        If *region\goto_scene <> -1
          NN_game_set_scene{*region\goto_scene}
        End If
      Else
        If overlapped <> prev_overlap AND *region\description_id <> -1
          UnBuffer #BF_main_screen
          TX_draw_text_wrapped{!__get_string{*region\description_id}, 32, #NN_half_screen_width , #NN_screen_height, False}
        End If
      End If
    Else
      UnBuffer 0
      NN_pointer_id = 0
    End If
  End If

  prev_overlap = overlapped

  ; Debug commands
CNIF #DEBUG = -1
  If RawStatus($45) Then NN_should_quit = True
  If RawStatus($01)
    For f = 0 to 16
      l$ = Str$(f * 4   ) + ": " + Str$(NS_flags(f* 4    )) + "    "
      l$ + Str$(f* 4 +  1) + ": " + Str$(NS_flags(f* 4 +  1)) + "    "
      l$ + Str$(f* 4 +  2) + ": " + Str$(NS_flags(f* 4 +  2)) + "    "
      l$ + Str$(f* 4 + 3) + ": " + Str$(NS_flags(f* 4 + 3)) + "    "
      !DB_log_str{"MAIN", l$}
    Next
  End If
  If RawStatus($02)
    PrintFreeMem{}
  End If
CEND

Until NN_should_quit

Finish:
TX_uninitialize{}
NN_uninitialize{}

MTEnd
MTRemove

; We're done!
End