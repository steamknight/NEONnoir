; =============================================================================
; NN_core
; -----------------------------------------------------------------------------
; Contains all global variables and a means to initialize and uninitialize that
; data
; =============================================================================

; =============================================================================
; Define all game types
; =============================================================================

; Regions
; -----------------------------------------------
NEWTYPE .NN_region
  x1.w
  y1.w
  x2.w
  y2.w
  pointer_id.w
  description_id.w
  script_offset.w
End NEWTYPE

; Scene
; -----------------------------------------------
NEWTYPE.NN_scene
  name_id.w
  on_enter.w
  on_exit.w
  background_id.w
  first_region.w
  last_region.w
  music_id.w
End NEWTYPE

; Location
; -----------------------------------------------
NEWTYPE .NN_location
  name_id.w
  first_bg.w
  last_bg.w
  first_scene.w
  last_scene.w
  first_shape.w
  last_shape.w
  shapes_file.w
End NEWTYPE

; Shape
; -----------------------------------------------
NEWTYPE .NN_shape
  shape_id.w
  palette_id.w
End NEWTYPE

; Dialogue Choice
; -----------------------------------------------
NEWTYPE .DG_choice
  text_id.w           ; index into string table
  set_flag.w          ; set this flag on selection, $FFFF if none
  clear_flag.w        ; clear this flag on selection, $FFFF if none
  check_flag.w        ; flag that determines if criteria is met, $FFFF if none
  page_id.w           ; id to the next page in the conversation
  script_offset.w     ; script to run if selected, $FFFF if none
  enabled.b           ; determine if it should be shown. If this is False, 
                      ; it overrides the flag property
  self_disable.b      ; Disable itself if true
End NEWTYPE

; Dialogue Page
; -----------------------------------------------
NEWTYPE .DG_page
  text_id.w           ; index into string array, $FFFF if no text
  set_flag.w          ; set this flag on selection, $FFFF if none
  clear_flag.w        ; clear this flag on selection, $FFFF if none
  check_flag.w        ; flag that determines if criteria is met, $FFFF if none
  page_id.w           ; index to the next page to display, $FFFF if no page
  first_choice_id.w   ; id of the first choice
  choice_count.w      ; number of choices in the page
  enabled.b           ; determine if it should be shown.
  self_disable.b      ; Disable itself if true
End NEWTYPE

; Dialogue
; -----------------------------------------------
NEWTYPE .DG_dialogue
  first_page_id.w     ; id of the first page of dialogue
  page_count.w        ; number of page in the dialogue
  speaker_name.w      ; text id for the speaker's name
  speaker_image.w     ; shape id for the speaker's portrait
End NEWTYPE

NEWTYPE .NN_word
  start_idx.w
  end_idx.w
End NEWTYPE

; Misc
; -----------------------------------------------
NEWTYPE .NN_screen_rect
  x0.w
  y0.w
  x1.w
  y1.w
End NEWTYPE

NEWTYPE .NN_pal_entry
  r.b
  g.b
  b.b
  padding.b
End NEWTYPE

; =============================================================================
; Define all globals and macros
; =============================================================================

DEFTYPE .b NN_is_in_title
NN_is_in_title = True

; NN_region dynamic array
; -----------------------------------------------
DEFTYPE .NN_region *NN_regions, *NN_current_region
DEFTYPE .l NN_region_count

Macro __get_region
  (*NN_regions + (SizeOf .NN_region * (`1)))
End Macro

; NN_scene dynamic array
; -----------------------------------------------
DEFTYPE .NN_scene *NN_scenes, *NN_current_scene
DEFTYPE .l NN_scene_count
DEFTYPE .w NN_current_scene_id

Macro __get_scene
  (*NN_scenes + (SizeOf .NN_scene * (`1)))
End Macro

; NN_location dynamic array
; -----------------------------------------------
DEFTYPE .NN_location *NN_locations, *NN_current_location
DEFTYPE .l NN_location_count
DEFTYPE .w NN_current_location_id

Macro __get_location
  (*NN_locations + (SizeOf .NN_location * (`1)))
End Macro

; NN_shape dynamic array
; -----------------------------------------------
DEFTYPE .NN_shape *NN_shape
DEFTYPE .l NN_shape_count

Macro __get_shape
  (*NN_shapes + (SizeOf .NN_shape * (`1)))
End Macro

; NN
; DG_choice dynamic array
; -----------------------------------------------
DEFTYPE .DG_choice *DG_choices
DEFTYPE .l DG_choice_count

Macro __get_choice
  (*DG_choices + (SizeOf .DG_choice * (`1)))
End Macro

; DG_page dynamic array
; -----------------------------------------------
DEFTYPE .DG_page *DG_pages
DEFTYPE .l DG_page_count

Macro __get_page
  (*DG_pages + (SizeOf .DG_page * (`1)))
End Macro

; DG_dialogue dynamic array
; -----------------------------------------------
DEFTYPE .DG_dialogue *DG_dialogues
DEFTYPE .l DG_dialogue_count

Macro __get_dialogue
  (*DG_dialogues + (SizeOf .DG_dialogue * (`1)))
End Macro

; String Table
; -----------------------------------------------
DEFTYPE .w *NN_string_table
DEFTYPE .b *NN_string_data
DEFTYPE .l NN_string_count, NN_string_data_size

Macro __get_string_length
  (Peek.w (*NN_string_table + ((`1) * SizeOf .l)))
End Macro

Macro __get_string_addr
  (Peek.l (*NN_string_table + ((`1) * SizeOf .l)) + 4)
End Macro

Macro __get_string
  Peek$(!__get_string_addr{(`1)})
End Macro

; Word Table/Data
; Stores the position of the beginning and end of every work in every string
; -----------------------------------------------
DEFTYPE .l *NN_word_table, NN_word_table_count, NN_word_data_size
DEFTYPE .NN_word *NN_word_data

Macro __get_word_count
  (Peek.l(Peek.l (*NN_word_table + ((`1) * SizeOf .l))))
End Macro

Macro __get_words
  (Peek.l (*NN_word_table + ((`1) * SizeOf .l)) + 4)
End Macro

; Custom Palettes
; -----------------------------------------------
DEFTYPE .NN_pal_entry *NN_palettes
DEFTYPE .l NN_palette_count, palette_offset
DEFTYPE .w NN_current_palette

; Each custom palette has exactly 32 entries
palette_offset = SizeOf .NN_pal_entry * 32

Macro __get_palette
  (*NN_palettes + (SizeOf .NN_pal_entry * 32 * (`1)))
End Macro

; Script
; -----------------------------------------------
DEFTYPE .w *NS_script_data, NS_script_queue
DEFTYPE .l NS_script_data_size

#NS_flag_count = 256
Dim NS_flags.b(#NS_flag_count)
; -----------------------------------------------
DEFTYPE .b DG_dialogue_is_active, DB_active_dialogue

; Dialogue

; Main
; -----------------------------------------------
DEFTYPE .b NN_current_bmp
DEFTYPE .b NN_should_quit
DEFTYPE .w NN_pointer_id

DEFTYPE .w MS_current_track_id

DEFTYPE .b NN_fade_in, NN_fade_out

; =============================================================================
; Convenience Macros
; =============================================================================
Macro __use_string_table
  SHARED *NN_string_table
End Macro

Macro __use_string_table_all
  SHARED *NN_string_table, *NN_string_data, NN_string_count, NN_string_data_size
End Macro

Macro __use_word_table
  SHARED *NN_word_table
End Macro

Macro __use_word_table_all
  SHARED *NN_word_table, NN_word_table_count, NN_word_data_size, *NN_word_data
End Macro

Macro __use_dialogues
  SHARED *DG_dialogues, *DG_pages, *DG_choices
End Macro

Macro __use_dialogue_limits
  SHARED DG_dialogue_count, DG_page_count, DG_choice_count
End Macro

Macro __use_shapes
  SHARED *NN_shapes, NN_shape_count
End Macro

Macro __use_palettes
  SHARED *NN_palettes, NN_palette_count, NN_current_palette
End Macro

Macro __make_size
  ((`1) LSL 16) + (`2)
End Macro

Macro __get_size_width
  (`1) LSR 16
End Macro

Macro __get_size_height
  (`1) AND $0000FFFF
End Macro

; =============================================================================
; Constants
; =============================================================================

; Game resolution
; -----------------------------------------------------------------------------
#NN_screen_width = 320
#NN_screen_height = 200
#NN_screen_bpp = 8
#NN_screen_colors = 256

#NN_half_screen_width = #NN_screen_width / 2

; Coplist
#CP_coplist = 0
#CP_origin = 44
#CP_sprites = 8

#CP_flag_agamode = $10000
#CP_flag_8bit = $8

#CP_flags = #CP_flag_agamode + #CP_flag_8bit

; Main bitmap and main palette
#BMP_main = 0
#PAL_main = 0
#PAL_fx = 10
; Display buffer
#BF_main_screen = 0
#BF_shapes = 1
#BF_faces = 2

; Palette
#PAL_portrait_start = 64
#PAL_portrait_end = 95


; Loading NEONpacks
; -----------------------------------------------------------------------------
#NN_NEON_magic = $4E454F4E          ; NEON
#NN_NEON_lang_magic = $4E4F4952     ; NOIR
#NN_NEON_locs = $4C4F4352           ; LOCS
#NN_NEON_scns = $53424E53           ; SCNS
#NN_NEON_rngs = $52474E53           ; RGNS
#NN_NEON_dlgs = $444C4753           ; DLGS
#NN_NEON_page = $50414745           ; PAGE
#NN_NEON_chce = $43484245           ; CHCE
#NN_NEON_byte = $42595445           ; BYTE
#NN_NEON_strg = $53545247           ; STRG

#NN_NEON_success                = -1
#NN_NEON_file_not_found         = 1
#NN_NEON_generic_read_error     = 2
#NN_NEON_not_a_neon_file        = 3
#NN_NEON_version_not_supported  = 4
#NN_NEON_lang_not_found         = 5

Dim NN_error_codes$(5)
NN_error_codes$(1) = "File not found"
NN_error_codes$(2) = "Generic read error"
NN_error_codes$(3) = "Not a NEON file"
NN_error_codes$(4) = "Version not supported"
NN_error_codes$(5) = "Language file not found"

; Mouse pointers
; -----------------------------------------------------------------------------
#NN_pointer_start = 10
#NN_pointer_end = 14
#NN_pointer_default = 10
#NN_pointer_examine = 11
#NN_pointer_interact = 12
#NN_pointer_exit = 13
#NN_pointer_wait = 14

#NN_menu_shape = 1

; Text
; -----------------------------------------------------------------------------
#TX_font_start = 32
#TX_font_end = 127
#TX_frame_start = 22
#TX_frame_end = 30
#TX_char_per_line = 28
#TX_lines_per_frame = 2

; Shape ids for the 9-patch for the text frame
#TX_frame_tl = 22
#TX_frame_tm = 23
#TX_frame_tr = 24
#TX_frame_ml = 25
#TX_frame_mm = 26
#TX_frame_mr = 27
#TX_frame_bl = 28
#TX_frame_bm = 29
#TX_frame_br = 30

#TX_frame_size = 8
#TX_frame_total_size = 16

; This is specific to the font file we're using
; A more robust approach would be to read this from a file
#TX_font_width = 6
#TX_font_height = 8

#TX_scratch_bmp = 10
#TX_space = 32
#TX_newline = 10
#TX_text_shape = 21
